from flask import Flask, render_template, request, jsonify
import json
from fuzzywuzzy import fuzz
from transformers import pipeline

app = Flask(__name__)

def load_knowledge_base(file_path='knowledge_data.json'):
    with open(file_path, 'r') as file:
        return json.load(file)

knowledge_base = load_knowledge_base()

text_generator = pipeline('text-generation', model='gpt2')


def clean_input(user_input):
    common_phrases = [
        "form", "tell me about", "show me", "give details of", 
        "information on", "describe", "details of", "tell me abt", "explain","procedure for","procedure","how"
    ]
    
    user_input = user_input.lower().strip()
    
    for phrase in common_phrases:
        user_input = user_input.replace(phrase, "")
    
    return user_input.strip()

def get_knowledge_response(query, threshold=60):
    best_match = None
    highest_score = 0
    
    for form in knowledge_base:
        if 'form_name' in form:
            score = fuzz.partial_ratio(query.lower(), form['form_name'].lower())
            if score > highest_score and score >= threshold:
                highest_score = score
                best_match = form
    
    return best_match

def chat(user_input):
    if user_input.lower() == "exit":
        return "Goodbye! Have a great day!"  
    
    cleaned_input = clean_input(user_input)
    
    response = get_knowledge_response(cleaned_input)
    
    if response:
        return {
            "form_name": response['form_name'],
            "description": response.get("description", "No description available."),
            "fee": response.get("fee", "No fee information available."),
            "procedure": response.get("procedure", "No procedure information available."),
            "image_url": response.get("image_url", "")
        }
    else:
        generated_text = text_generator(cleaned_input, max_length=100, num_return_sequences=1, 
                                        truncation=True, pad_token_id=50256)
        return {"response": generated_text[0]['generated_text']}

@app.route('/')
def index():
    greeting_message = "Hello! I'm here to assist you with forms. Ask me anything about forms or just say 'exit' to quit."
    return render_template('index.html', greeting=greeting_message)

@app.route('/get_form_names', methods=['GET'])
def get_form_names():
    forms = knowledge_base
    form_names = [{"form_name": form['form_name'], "description": form['description']} for form in forms]
    return jsonify(form_names)

@app.route('/get_response', methods=['POST'])
def get_response():
    user_input = request.json['user_input']
    bot_response = chat(user_input)
    
    if isinstance(bot_response, dict):
        if 'form_name' in bot_response:
            return jsonify({
                "form_name": bot_response['form_name'],
                "description": bot_response['description'],
                "fee": bot_response['fee'],
                "procedure": bot_response['procedure'],
                "image_url": bot_response['image_url']
                
            })
        else:
            return jsonify({"response": bot_response["response"]})
    else:
        return jsonify({"response": bot_response["response"]})

if __name__ == '__main__':
    app.run(debug=True)
